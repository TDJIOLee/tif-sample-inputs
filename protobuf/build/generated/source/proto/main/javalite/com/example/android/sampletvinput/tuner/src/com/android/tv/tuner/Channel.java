// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channel.proto

package com.example.android.sampletvinput.tuner.src.com.android.tv.tuner;

public final class Channel {
  private Channel() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * Enum describing the types of tuner.
   * </pre>
   *
   * Protobuf enum {@code com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType}
   */
  public enum TunerType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TYPE_TUNER = 0;</code>
     */
    TYPE_TUNER(0),
    /**
     * <code>TYPE_FILE = 1;</code>
     */
    TYPE_FILE(1),
    /**
     * <code>TYPE_NETWORK = 2;</code>
     */
    TYPE_NETWORK(2),
    ;

    /**
     * <code>TYPE_TUNER = 0;</code>
     */
    public static final int TYPE_TUNER_VALUE = 0;
    /**
     * <code>TYPE_FILE = 1;</code>
     */
    public static final int TYPE_FILE_VALUE = 1;
    /**
     * <code>TYPE_NETWORK = 2;</code>
     */
    public static final int TYPE_NETWORK_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TunerType valueOf(int value) {
      return forNumber(value);
    }

    public static TunerType forNumber(int value) {
      switch (value) {
        case 0: return TYPE_TUNER;
        case 1: return TYPE_FILE;
        case 2: return TYPE_NETWORK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TunerType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TunerType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TunerType>() {
            public TunerType findValueByNumber(int number) {
              return TunerType.forNumber(number);
            }
          };

    private final int value;

    private TunerType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType)
  }

  /**
   * <pre>
   * Enum describing the types of video stream.
   * </pre>
   *
   * Protobuf enum {@code com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType}
   */
  public enum VideoStreamType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * ISO/IEC 11172 Video (MPEG-1)
     * </pre>
     *
     * <code>MPEG1 = 1;</code>
     */
    MPEG1(1),
    /**
     * <pre>
     * ISO/IEC 13818-2 (MPEG-2) Video
     * </pre>
     *
     * <code>MPEG2 = 2;</code>
     */
    MPEG2(2),
    /**
     * <pre>
     * ISO/IEC 14496-2 (MPEG-4 H.263 based)
     * </pre>
     *
     * <code>H263 = 16;</code>
     */
    H263(16),
    /**
     * <pre>
     * ISO/IE 14496-10 (H.264 video)
     * </pre>
     *
     * <code>H264 = 27;</code>
     */
    H264(27),
    /**
     * <pre>
     * ISO/IE 23008-2 (H.265 video)
     * </pre>
     *
     * <code>H265 = 36;</code>
     */
    H265(36),
    ;

    /**
     * <pre>
     * ISO/IEC 11172 Video (MPEG-1)
     * </pre>
     *
     * <code>MPEG1 = 1;</code>
     */
    public static final int MPEG1_VALUE = 1;
    /**
     * <pre>
     * ISO/IEC 13818-2 (MPEG-2) Video
     * </pre>
     *
     * <code>MPEG2 = 2;</code>
     */
    public static final int MPEG2_VALUE = 2;
    /**
     * <pre>
     * ISO/IEC 14496-2 (MPEG-4 H.263 based)
     * </pre>
     *
     * <code>H263 = 16;</code>
     */
    public static final int H263_VALUE = 16;
    /**
     * <pre>
     * ISO/IE 14496-10 (H.264 video)
     * </pre>
     *
     * <code>H264 = 27;</code>
     */
    public static final int H264_VALUE = 27;
    /**
     * <pre>
     * ISO/IE 23008-2 (H.265 video)
     * </pre>
     *
     * <code>H265 = 36;</code>
     */
    public static final int H265_VALUE = 36;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VideoStreamType valueOf(int value) {
      return forNumber(value);
    }

    public static VideoStreamType forNumber(int value) {
      switch (value) {
        case 1: return MPEG1;
        case 2: return MPEG2;
        case 16: return H263;
        case 27: return H264;
        case 36: return H265;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VideoStreamType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VideoStreamType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VideoStreamType>() {
            public VideoStreamType findValueByNumber(int number) {
              return VideoStreamType.forNumber(number);
            }
          };

    private final int value;

    private VideoStreamType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType)
  }

  /**
   * <pre>
   * Enum describing the types of audio stream.
   * </pre>
   *
   * Protobuf enum {@code com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType}
   */
  public enum AudioStreamType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * ISO/IEC 11172 Audio (MPEG-1)
     * </pre>
     *
     * <code>MPEG1AUDIO = 3;</code>
     */
    MPEG1AUDIO(3),
    /**
     * <pre>
     * ISO/IEC 13818-3 Audio (MPEG-2)
     * </pre>
     *
     * <code>MPEG2AUDIO = 4;</code>
     */
    MPEG2AUDIO(4),
    /**
     * <pre>
     * ISO/IEC 13818-7 Audio with ADTS transport syntax
     * </pre>
     *
     * <code>MPEG2AACAUDIO = 15;</code>
     */
    MPEG2AACAUDIO(15),
    /**
     * <pre>
     * ISO/IEC 14496-3 (MPEG-4 LOAS multi-format framed audio)
     * </pre>
     *
     * <code>MPEG4LATMAACAUDIO = 17;</code>
     */
    MPEG4LATMAACAUDIO(17),
    /**
     * <pre>
     * Dolby Digital Audio (ATSC)
     * </pre>
     *
     * <code>A52AC3AUDIO = 129;</code>
     */
    A52AC3AUDIO(129),
    /**
     * <pre>
     * Dolby Digital Plus Audio (ATSC)ISO/IEC 14496-2Video (MPEG-1)
     * </pre>
     *
     * <code>EAC3AUDIO = 135;</code>
     */
    EAC3AUDIO(135),
    ;

    /**
     * <pre>
     * ISO/IEC 11172 Audio (MPEG-1)
     * </pre>
     *
     * <code>MPEG1AUDIO = 3;</code>
     */
    public static final int MPEG1AUDIO_VALUE = 3;
    /**
     * <pre>
     * ISO/IEC 13818-3 Audio (MPEG-2)
     * </pre>
     *
     * <code>MPEG2AUDIO = 4;</code>
     */
    public static final int MPEG2AUDIO_VALUE = 4;
    /**
     * <pre>
     * ISO/IEC 13818-7 Audio with ADTS transport syntax
     * </pre>
     *
     * <code>MPEG2AACAUDIO = 15;</code>
     */
    public static final int MPEG2AACAUDIO_VALUE = 15;
    /**
     * <pre>
     * ISO/IEC 14496-3 (MPEG-4 LOAS multi-format framed audio)
     * </pre>
     *
     * <code>MPEG4LATMAACAUDIO = 17;</code>
     */
    public static final int MPEG4LATMAACAUDIO_VALUE = 17;
    /**
     * <pre>
     * Dolby Digital Audio (ATSC)
     * </pre>
     *
     * <code>A52AC3AUDIO = 129;</code>
     */
    public static final int A52AC3AUDIO_VALUE = 129;
    /**
     * <pre>
     * Dolby Digital Plus Audio (ATSC)ISO/IEC 14496-2Video (MPEG-1)
     * </pre>
     *
     * <code>EAC3AUDIO = 135;</code>
     */
    public static final int EAC3AUDIO_VALUE = 135;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AudioStreamType valueOf(int value) {
      return forNumber(value);
    }

    public static AudioStreamType forNumber(int value) {
      switch (value) {
        case 3: return MPEG1AUDIO;
        case 4: return MPEG2AUDIO;
        case 15: return MPEG2AACAUDIO;
        case 17: return MPEG4LATMAACAUDIO;
        case 129: return A52AC3AUDIO;
        case 135: return EAC3AUDIO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AudioStreamType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AudioStreamType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AudioStreamType>() {
            public AudioStreamType findValueByNumber(int number) {
              return AudioStreamType.forNumber(number);
            }
          };

    private final int value;

    private AudioStreamType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType)
  }

  /**
   * <pre>
   * Enum describing ATSC service types
   * See ATSC Code Points Registry.
   * </pre>
   *
   * Protobuf enum {@code com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType}
   */
  public enum AtscServiceType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>SERVICE_TYPE_ATSC_RESERVED = 0;</code>
     */
    SERVICE_TYPE_ATSC_RESERVED(0),
    /**
     * <code>SERVICE_TYPE_ANALOG_TELEVISION_CHANNELS = 1;</code>
     */
    SERVICE_TYPE_ANALOG_TELEVISION_CHANNELS(1),
    /**
     * <code>SERVICE_TYPE_ATSC_DIGITAL_TELEVISION = 2;</code>
     */
    SERVICE_TYPE_ATSC_DIGITAL_TELEVISION(2),
    /**
     * <code>SERVICE_TYPE_ATSC_AUDIO = 3;</code>
     */
    SERVICE_TYPE_ATSC_AUDIO(3),
    /**
     * <code>SERVICE_TYPE_ATSC_DATA_ONLY_SERVICE = 4;</code>
     */
    SERVICE_TYPE_ATSC_DATA_ONLY_SERVICE(4),
    /**
     * <code>SERVICE_TYPE_SOFTWARE_DOWNLOAD = 5;</code>
     */
    SERVICE_TYPE_SOFTWARE_DOWNLOAD(5),
    /**
     * <code>SERVICE_TYPE_UNASSOCIATED_SMALL_SCREEN_SERVICE = 6;</code>
     */
    SERVICE_TYPE_UNASSOCIATED_SMALL_SCREEN_SERVICE(6),
    /**
     * <code>SERVICE_TYPE_PARAMETERIZED_SERVICE = 7;</code>
     */
    SERVICE_TYPE_PARAMETERIZED_SERVICE(7),
    /**
     * <code>SERVICE_TYPE_ATSC_NRT_SERVICE = 8;</code>
     */
    SERVICE_TYPE_ATSC_NRT_SERVICE(8),
    /**
     * <code>SERVICE_TYPE_EXTENDED_PARAMERTERIZED_SERVICE = 9;</code>
     */
    SERVICE_TYPE_EXTENDED_PARAMERTERIZED_SERVICE(9),
    ;

    /**
     * <code>SERVICE_TYPE_ATSC_RESERVED = 0;</code>
     */
    public static final int SERVICE_TYPE_ATSC_RESERVED_VALUE = 0;
    /**
     * <code>SERVICE_TYPE_ANALOG_TELEVISION_CHANNELS = 1;</code>
     */
    public static final int SERVICE_TYPE_ANALOG_TELEVISION_CHANNELS_VALUE = 1;
    /**
     * <code>SERVICE_TYPE_ATSC_DIGITAL_TELEVISION = 2;</code>
     */
    public static final int SERVICE_TYPE_ATSC_DIGITAL_TELEVISION_VALUE = 2;
    /**
     * <code>SERVICE_TYPE_ATSC_AUDIO = 3;</code>
     */
    public static final int SERVICE_TYPE_ATSC_AUDIO_VALUE = 3;
    /**
     * <code>SERVICE_TYPE_ATSC_DATA_ONLY_SERVICE = 4;</code>
     */
    public static final int SERVICE_TYPE_ATSC_DATA_ONLY_SERVICE_VALUE = 4;
    /**
     * <code>SERVICE_TYPE_SOFTWARE_DOWNLOAD = 5;</code>
     */
    public static final int SERVICE_TYPE_SOFTWARE_DOWNLOAD_VALUE = 5;
    /**
     * <code>SERVICE_TYPE_UNASSOCIATED_SMALL_SCREEN_SERVICE = 6;</code>
     */
    public static final int SERVICE_TYPE_UNASSOCIATED_SMALL_SCREEN_SERVICE_VALUE = 6;
    /**
     * <code>SERVICE_TYPE_PARAMETERIZED_SERVICE = 7;</code>
     */
    public static final int SERVICE_TYPE_PARAMETERIZED_SERVICE_VALUE = 7;
    /**
     * <code>SERVICE_TYPE_ATSC_NRT_SERVICE = 8;</code>
     */
    public static final int SERVICE_TYPE_ATSC_NRT_SERVICE_VALUE = 8;
    /**
     * <code>SERVICE_TYPE_EXTENDED_PARAMERTERIZED_SERVICE = 9;</code>
     */
    public static final int SERVICE_TYPE_EXTENDED_PARAMERTERIZED_SERVICE_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AtscServiceType valueOf(int value) {
      return forNumber(value);
    }

    public static AtscServiceType forNumber(int value) {
      switch (value) {
        case 0: return SERVICE_TYPE_ATSC_RESERVED;
        case 1: return SERVICE_TYPE_ANALOG_TELEVISION_CHANNELS;
        case 2: return SERVICE_TYPE_ATSC_DIGITAL_TELEVISION;
        case 3: return SERVICE_TYPE_ATSC_AUDIO;
        case 4: return SERVICE_TYPE_ATSC_DATA_ONLY_SERVICE;
        case 5: return SERVICE_TYPE_SOFTWARE_DOWNLOAD;
        case 6: return SERVICE_TYPE_UNASSOCIATED_SMALL_SCREEN_SERVICE;
        case 7: return SERVICE_TYPE_PARAMETERIZED_SERVICE;
        case 8: return SERVICE_TYPE_ATSC_NRT_SERVICE;
        case 9: return SERVICE_TYPE_EXTENDED_PARAMERTERIZED_SERVICE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AtscServiceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AtscServiceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AtscServiceType>() {
            public AtscServiceType findValueByNumber(int number) {
              return AtscServiceType.forNumber(number);
            }
          };

    private final int value;

    private AtscServiceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType)
  }

  public interface TunerChannelProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
     */
    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType getType();

    /**
     * <code>optional string short_name = 2;</code>
     */
    boolean hasShortName();
    /**
     * <code>optional string short_name = 2;</code>
     */
    java.lang.String getShortName();
    /**
     * <code>optional string short_name = 2;</code>
     */
    com.google.protobuf.ByteString
        getShortNameBytes();

    /**
     * <code>optional string long_name = 3;</code>
     */
    boolean hasLongName();
    /**
     * <code>optional string long_name = 3;</code>
     */
    java.lang.String getLongName();
    /**
     * <code>optional string long_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getLongNameBytes();

    /**
     * <code>optional int32 frequency = 4;</code>
     */
    boolean hasFrequency();
    /**
     * <code>optional int32 frequency = 4;</code>
     */
    int getFrequency();

    /**
     * <code>optional string modulation = 5;</code>
     */
    boolean hasModulation();
    /**
     * <code>optional string modulation = 5;</code>
     */
    java.lang.String getModulation();
    /**
     * <code>optional string modulation = 5;</code>
     */
    com.google.protobuf.ByteString
        getModulationBytes();

    /**
     * <code>optional string filepath = 6;</code>
     */
    boolean hasFilepath();
    /**
     * <code>optional string filepath = 6;</code>
     */
    java.lang.String getFilepath();
    /**
     * <code>optional string filepath = 6;</code>
     */
    com.google.protobuf.ByteString
        getFilepathBytes();

    /**
     * <code>optional int32 program_number = 7;</code>
     */
    boolean hasProgramNumber();
    /**
     * <code>optional int32 program_number = 7;</code>
     */
    int getProgramNumber();

    /**
     * <code>optional int32 virtual_major = 8;</code>
     */
    boolean hasVirtualMajor();
    /**
     * <code>optional int32 virtual_major = 8;</code>
     */
    int getVirtualMajor();

    /**
     * <code>optional int32 virtual_minor = 9;</code>
     */
    boolean hasVirtualMinor();
    /**
     * <code>optional int32 virtual_minor = 9;</code>
     */
    int getVirtualMinor();

    /**
     * <code>optional int64 channel_id = 10;</code>
     */
    boolean hasChannelId();
    /**
     * <code>optional int64 channel_id = 10;</code>
     */
    long getChannelId();

    /**
     * <code>optional string description = 11;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 11;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 11;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>optional int32 tsid = 12;</code>
     */
    boolean hasTsid();
    /**
     * <code>optional int32 tsid = 12;</code>
     */
    int getTsid();

    /**
     * <code>optional int32 video_pid = 13;</code>
     */
    boolean hasVideoPid();
    /**
     * <code>optional int32 video_pid = 13;</code>
     */
    int getVideoPid();

    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
     */
    boolean hasVideoStreamType();
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
     */
    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType getVideoStreamType();

    /**
     * <code>optional int32 pcr_pid = 15;</code>
     */
    boolean hasPcrPid();
    /**
     * <code>optional int32 pcr_pid = 15;</code>
     */
    int getPcrPid();

    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack> 
        getAudioTracksList();
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack getAudioTracks(int index);
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    int getAudioTracksCount();

    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    java.util.List<java.lang.Integer> getAudioPidsList();
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    int getAudioPidsCount();
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    int getAudioPids(int index);

    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType> getAudioStreamTypesList();
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    int getAudioStreamTypesCount();
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType getAudioStreamTypes(int index);

    /**
     * <code>optional int32 audio_track_index = 19;</code>
     */
    boolean hasAudioTrackIndex();
    /**
     * <code>optional int32 audio_track_index = 19;</code>
     */
    int getAudioTrackIndex();

    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack> 
        getCaptionTracksList();
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack getCaptionTracks(int index);
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    int getCaptionTracksCount();

    /**
     * <code>optional bool has_caption_track = 21;</code>
     */
    boolean hasHasCaptionTrack();
    /**
     * <code>optional bool has_caption_track = 21;</code>
     */
    boolean getHasCaptionTrack();

    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
     */
    boolean hasServiceType();
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
     */
    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType getServiceType();

    /**
     * <code>optional bool recording_prohibited = 23;</code>
     */
    boolean hasRecordingProhibited();
    /**
     * <code>optional bool recording_prohibited = 23;</code>
     */
    boolean getRecordingProhibited();

    /**
     * <code>optional string video_format = 24;</code>
     */
    boolean hasVideoFormat();
    /**
     * <code>optional string video_format = 24;</code>
     */
    java.lang.String getVideoFormat();
    /**
     * <code>optional string video_format = 24;</code>
     */
    com.google.protobuf.ByteString
        getVideoFormatBytes();

    /**
     * <pre>
     **
     * The flag indicating whether this TV channel is locked or not.
     * This is primarily used for alternative parental control to prevent unauthorized users from
     * watching the current channel regardless of the content rating
     * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
     * </pre>
     *
     * <code>optional bool locked = 25;</code>
     */
    boolean hasLocked();
    /**
     * <pre>
     **
     * The flag indicating whether this TV channel is locked or not.
     * This is primarily used for alternative parental control to prevent unauthorized users from
     * watching the current channel regardless of the content rating
     * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
     * </pre>
     *
     * <code>optional bool locked = 25;</code>
     */
    boolean getLocked();
  }
  /**
   * <pre>
   * Holds information about a channel used in the tuners.
   * </pre>
   *
   * Protobuf type {@code com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto}
   */
  public  static final class TunerChannelProto extends
      com.google.protobuf.GeneratedMessageLite<
          TunerChannelProto, TunerChannelProto.Builder> implements
      // @@protoc_insertion_point(message_implements:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto)
      TunerChannelProtoOrBuilder {
    private TunerChannelProto() {
      shortName_ = "";
      longName_ = "";
      modulation_ = "";
      filepath_ = "";
      description_ = "";
      videoStreamType_ = 1;
      audioTracks_ = emptyProtobufList();
      audioPids_ = emptyIntList();
      audioStreamTypes_ = emptyIntList();
      captionTracks_ = emptyProtobufList();
      serviceType_ = 2;
      videoFormat_ = "";
    }
    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType getType() {
      com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType result = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType.forNumber(type_);
      return result == null ? com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType.TYPE_TUNER : result;
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
     */
    private void setType(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
    }

    public static final int SHORT_NAME_FIELD_NUMBER = 2;
    private java.lang.String shortName_;
    /**
     * <code>optional string short_name = 2;</code>
     */
    public boolean hasShortName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string short_name = 2;</code>
     */
    public java.lang.String getShortName() {
      return shortName_;
    }
    /**
     * <code>optional string short_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getShortNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(shortName_);
    }
    /**
     * <code>optional string short_name = 2;</code>
     */
    private void setShortName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      shortName_ = value;
    }
    /**
     * <code>optional string short_name = 2;</code>
     */
    private void clearShortName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      shortName_ = getDefaultInstance().getShortName();
    }
    /**
     * <code>optional string short_name = 2;</code>
     */
    private void setShortNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      shortName_ = value.toStringUtf8();
    }

    public static final int LONG_NAME_FIELD_NUMBER = 3;
    private java.lang.String longName_;
    /**
     * <code>optional string long_name = 3;</code>
     */
    public boolean hasLongName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string long_name = 3;</code>
     */
    public java.lang.String getLongName() {
      return longName_;
    }
    /**
     * <code>optional string long_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLongNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(longName_);
    }
    /**
     * <code>optional string long_name = 3;</code>
     */
    private void setLongName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      longName_ = value;
    }
    /**
     * <code>optional string long_name = 3;</code>
     */
    private void clearLongName() {
      bitField0_ = (bitField0_ & ~0x00000004);
      longName_ = getDefaultInstance().getLongName();
    }
    /**
     * <code>optional string long_name = 3;</code>
     */
    private void setLongNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      longName_ = value.toStringUtf8();
    }

    public static final int FREQUENCY_FIELD_NUMBER = 4;
    private int frequency_;
    /**
     * <code>optional int32 frequency = 4;</code>
     */
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 frequency = 4;</code>
     */
    public int getFrequency() {
      return frequency_;
    }
    /**
     * <code>optional int32 frequency = 4;</code>
     */
    private void setFrequency(int value) {
      bitField0_ |= 0x00000008;
      frequency_ = value;
    }
    /**
     * <code>optional int32 frequency = 4;</code>
     */
    private void clearFrequency() {
      bitField0_ = (bitField0_ & ~0x00000008);
      frequency_ = 0;
    }

    public static final int MODULATION_FIELD_NUMBER = 5;
    private java.lang.String modulation_;
    /**
     * <code>optional string modulation = 5;</code>
     */
    public boolean hasModulation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string modulation = 5;</code>
     */
    public java.lang.String getModulation() {
      return modulation_;
    }
    /**
     * <code>optional string modulation = 5;</code>
     */
    public com.google.protobuf.ByteString
        getModulationBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(modulation_);
    }
    /**
     * <code>optional string modulation = 5;</code>
     */
    private void setModulation(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      modulation_ = value;
    }
    /**
     * <code>optional string modulation = 5;</code>
     */
    private void clearModulation() {
      bitField0_ = (bitField0_ & ~0x00000010);
      modulation_ = getDefaultInstance().getModulation();
    }
    /**
     * <code>optional string modulation = 5;</code>
     */
    private void setModulationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
      modulation_ = value.toStringUtf8();
    }

    public static final int FILEPATH_FIELD_NUMBER = 6;
    private java.lang.String filepath_;
    /**
     * <code>optional string filepath = 6;</code>
     */
    public boolean hasFilepath() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string filepath = 6;</code>
     */
    public java.lang.String getFilepath() {
      return filepath_;
    }
    /**
     * <code>optional string filepath = 6;</code>
     */
    public com.google.protobuf.ByteString
        getFilepathBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(filepath_);
    }
    /**
     * <code>optional string filepath = 6;</code>
     */
    private void setFilepath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      filepath_ = value;
    }
    /**
     * <code>optional string filepath = 6;</code>
     */
    private void clearFilepath() {
      bitField0_ = (bitField0_ & ~0x00000020);
      filepath_ = getDefaultInstance().getFilepath();
    }
    /**
     * <code>optional string filepath = 6;</code>
     */
    private void setFilepathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      filepath_ = value.toStringUtf8();
    }

    public static final int PROGRAM_NUMBER_FIELD_NUMBER = 7;
    private int programNumber_;
    /**
     * <code>optional int32 program_number = 7;</code>
     */
    public boolean hasProgramNumber() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 program_number = 7;</code>
     */
    public int getProgramNumber() {
      return programNumber_;
    }
    /**
     * <code>optional int32 program_number = 7;</code>
     */
    private void setProgramNumber(int value) {
      bitField0_ |= 0x00000040;
      programNumber_ = value;
    }
    /**
     * <code>optional int32 program_number = 7;</code>
     */
    private void clearProgramNumber() {
      bitField0_ = (bitField0_ & ~0x00000040);
      programNumber_ = 0;
    }

    public static final int VIRTUAL_MAJOR_FIELD_NUMBER = 8;
    private int virtualMajor_;
    /**
     * <code>optional int32 virtual_major = 8;</code>
     */
    public boolean hasVirtualMajor() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 virtual_major = 8;</code>
     */
    public int getVirtualMajor() {
      return virtualMajor_;
    }
    /**
     * <code>optional int32 virtual_major = 8;</code>
     */
    private void setVirtualMajor(int value) {
      bitField0_ |= 0x00000080;
      virtualMajor_ = value;
    }
    /**
     * <code>optional int32 virtual_major = 8;</code>
     */
    private void clearVirtualMajor() {
      bitField0_ = (bitField0_ & ~0x00000080);
      virtualMajor_ = 0;
    }

    public static final int VIRTUAL_MINOR_FIELD_NUMBER = 9;
    private int virtualMinor_;
    /**
     * <code>optional int32 virtual_minor = 9;</code>
     */
    public boolean hasVirtualMinor() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 virtual_minor = 9;</code>
     */
    public int getVirtualMinor() {
      return virtualMinor_;
    }
    /**
     * <code>optional int32 virtual_minor = 9;</code>
     */
    private void setVirtualMinor(int value) {
      bitField0_ |= 0x00000100;
      virtualMinor_ = value;
    }
    /**
     * <code>optional int32 virtual_minor = 9;</code>
     */
    private void clearVirtualMinor() {
      bitField0_ = (bitField0_ & ~0x00000100);
      virtualMinor_ = 0;
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 10;
    private long channelId_;
    /**
     * <code>optional int64 channel_id = 10;</code>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int64 channel_id = 10;</code>
     */
    public long getChannelId() {
      return channelId_;
    }
    /**
     * <code>optional int64 channel_id = 10;</code>
     */
    private void setChannelId(long value) {
      bitField0_ |= 0x00000200;
      channelId_ = value;
    }
    /**
     * <code>optional int64 channel_id = 10;</code>
     */
    private void clearChannelId() {
      bitField0_ = (bitField0_ & ~0x00000200);
      channelId_ = 0L;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 11;
    private java.lang.String description_;
    /**
     * <code>optional string description = 11;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string description = 11;</code>
     */
    public java.lang.String getDescription() {
      return description_;
    }
    /**
     * <code>optional string description = 11;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(description_);
    }
    /**
     * <code>optional string description = 11;</code>
     */
    private void setDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      description_ = value;
    }
    /**
     * <code>optional string description = 11;</code>
     */
    private void clearDescription() {
      bitField0_ = (bitField0_ & ~0x00000400);
      description_ = getDefaultInstance().getDescription();
    }
    /**
     * <code>optional string description = 11;</code>
     */
    private void setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
      description_ = value.toStringUtf8();
    }

    public static final int TSID_FIELD_NUMBER = 12;
    private int tsid_;
    /**
     * <code>optional int32 tsid = 12;</code>
     */
    public boolean hasTsid() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 tsid = 12;</code>
     */
    public int getTsid() {
      return tsid_;
    }
    /**
     * <code>optional int32 tsid = 12;</code>
     */
    private void setTsid(int value) {
      bitField0_ |= 0x00000800;
      tsid_ = value;
    }
    /**
     * <code>optional int32 tsid = 12;</code>
     */
    private void clearTsid() {
      bitField0_ = (bitField0_ & ~0x00000800);
      tsid_ = 0;
    }

    public static final int VIDEO_PID_FIELD_NUMBER = 13;
    private int videoPid_;
    /**
     * <code>optional int32 video_pid = 13;</code>
     */
    public boolean hasVideoPid() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 video_pid = 13;</code>
     */
    public int getVideoPid() {
      return videoPid_;
    }
    /**
     * <code>optional int32 video_pid = 13;</code>
     */
    private void setVideoPid(int value) {
      bitField0_ |= 0x00001000;
      videoPid_ = value;
    }
    /**
     * <code>optional int32 video_pid = 13;</code>
     */
    private void clearVideoPid() {
      bitField0_ = (bitField0_ & ~0x00001000);
      videoPid_ = 0;
    }

    public static final int VIDEO_STREAM_TYPE_FIELD_NUMBER = 14;
    private int videoStreamType_;
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
     */
    public boolean hasVideoStreamType() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType getVideoStreamType() {
      com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType result = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType.forNumber(videoStreamType_);
      return result == null ? com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType.MPEG1 : result;
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
     */
    private void setVideoStreamType(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00002000;
      videoStreamType_ = value.getNumber();
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
     */
    private void clearVideoStreamType() {
      bitField0_ = (bitField0_ & ~0x00002000);
      videoStreamType_ = 1;
    }

    public static final int PCR_PID_FIELD_NUMBER = 15;
    private int pcrPid_;
    /**
     * <code>optional int32 pcr_pid = 15;</code>
     */
    public boolean hasPcrPid() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 pcr_pid = 15;</code>
     */
    public int getPcrPid() {
      return pcrPid_;
    }
    /**
     * <code>optional int32 pcr_pid = 15;</code>
     */
    private void setPcrPid(int value) {
      bitField0_ |= 0x00004000;
      pcrPid_ = value;
    }
    /**
     * <code>optional int32 pcr_pid = 15;</code>
     */
    private void clearPcrPid() {
      bitField0_ = (bitField0_ & ~0x00004000);
      pcrPid_ = 0;
    }

    public static final int AUDIO_TRACKS_FIELD_NUMBER = 16;
    private com.google.protobuf.Internal.ProtobufList<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack> audioTracks_;
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    public java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack> getAudioTracksList() {
      return audioTracks_;
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    public java.util.List<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrackOrBuilder> 
        getAudioTracksOrBuilderList() {
      return audioTracks_;
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    public int getAudioTracksCount() {
      return audioTracks_.size();
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack getAudioTracks(int index) {
      return audioTracks_.get(index);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrackOrBuilder getAudioTracksOrBuilder(
        int index) {
      return audioTracks_.get(index);
    }
    private void ensureAudioTracksIsMutable() {
      if (!audioTracks_.isModifiable()) {
        audioTracks_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(audioTracks_);
       }
    }

    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void setAudioTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAudioTracksIsMutable();
      audioTracks_.set(index, value);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void setAudioTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.Builder builderForValue) {
      ensureAudioTracksIsMutable();
      audioTracks_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void addAudioTracks(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAudioTracksIsMutable();
      audioTracks_.add(value);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void addAudioTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAudioTracksIsMutable();
      audioTracks_.add(index, value);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void addAudioTracks(
        com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.Builder builderForValue) {
      ensureAudioTracksIsMutable();
      audioTracks_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void addAudioTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.Builder builderForValue) {
      ensureAudioTracksIsMutable();
      audioTracks_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void addAllAudioTracks(
        java.lang.Iterable<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack> values) {
      ensureAudioTracksIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, audioTracks_);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void clearAudioTracks() {
      audioTracks_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
     */
    private void removeAudioTracks(int index) {
      ensureAudioTracksIsMutable();
      audioTracks_.remove(index);
    }

    public static final int AUDIO_PIDS_FIELD_NUMBER = 17;
    private com.google.protobuf.Internal.IntList audioPids_;
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    public java.util.List<java.lang.Integer>
        getAudioPidsList() {
      return audioPids_;
    }
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    public int getAudioPidsCount() {
      return audioPids_.size();
    }
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    public int getAudioPids(int index) {
      return audioPids_.getInt(index);
    }
    private void ensureAudioPidsIsMutable() {
      if (!audioPids_.isModifiable()) {
        audioPids_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(audioPids_);
       }
    }
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    private void setAudioPids(
        int index, int value) {
      ensureAudioPidsIsMutable();
      audioPids_.setInt(index, value);
    }
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    private void addAudioPids(int value) {
      ensureAudioPidsIsMutable();
      audioPids_.addInt(value);
    }
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    private void addAllAudioPids(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureAudioPidsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, audioPids_);
    }
    /**
     * <code>repeated int32 audio_pids = 17;</code>
     */
    private void clearAudioPids() {
      audioPids_ = emptyIntList();
    }

    public static final int AUDIO_STREAM_TYPES_FIELD_NUMBER = 18;
    private com.google.protobuf.Internal.IntList audioStreamTypes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType> audioStreamTypes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType>() {
              public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType convert(java.lang.Integer from) {
                com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType result = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType.forNumber(from);
                return result == null ? com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType.MPEG1AUDIO : result;
              }
            };
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    public java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType> getAudioStreamTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType>(audioStreamTypes_, audioStreamTypes_converter_);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    public int getAudioStreamTypesCount() {
      return audioStreamTypes_.size();
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType getAudioStreamTypes(int index) {
      return audioStreamTypes_converter_.convert(audioStreamTypes_.getInt(index));
    }
    private void ensureAudioStreamTypesIsMutable() {
      if (!audioStreamTypes_.isModifiable()) {
        audioStreamTypes_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(audioStreamTypes_);
      }
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    private void setAudioStreamTypes(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAudioStreamTypesIsMutable();
      audioStreamTypes_.setInt(index, value.getNumber());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    private void addAudioStreamTypes(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAudioStreamTypesIsMutable();
      audioStreamTypes_.addInt(value.getNumber());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    private void addAllAudioStreamTypes(
        java.lang.Iterable<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType> values) {
      ensureAudioStreamTypesIsMutable();
      for (com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value : values) {
        audioStreamTypes_.addInt(value.getNumber());
      }
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
     */
    private void clearAudioStreamTypes() {
      audioStreamTypes_ = emptyIntList();
    }

    public static final int AUDIO_TRACK_INDEX_FIELD_NUMBER = 19;
    private int audioTrackIndex_;
    /**
     * <code>optional int32 audio_track_index = 19;</code>
     */
    public boolean hasAudioTrackIndex() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 audio_track_index = 19;</code>
     */
    public int getAudioTrackIndex() {
      return audioTrackIndex_;
    }
    /**
     * <code>optional int32 audio_track_index = 19;</code>
     */
    private void setAudioTrackIndex(int value) {
      bitField0_ |= 0x00008000;
      audioTrackIndex_ = value;
    }
    /**
     * <code>optional int32 audio_track_index = 19;</code>
     */
    private void clearAudioTrackIndex() {
      bitField0_ = (bitField0_ & ~0x00008000);
      audioTrackIndex_ = 0;
    }

    public static final int CAPTION_TRACKS_FIELD_NUMBER = 20;
    private com.google.protobuf.Internal.ProtobufList<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack> captionTracks_;
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    public java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack> getCaptionTracksList() {
      return captionTracks_;
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    public java.util.List<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrackOrBuilder> 
        getCaptionTracksOrBuilderList() {
      return captionTracks_;
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    public int getCaptionTracksCount() {
      return captionTracks_.size();
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack getCaptionTracks(int index) {
      return captionTracks_.get(index);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrackOrBuilder getCaptionTracksOrBuilder(
        int index) {
      return captionTracks_.get(index);
    }
    private void ensureCaptionTracksIsMutable() {
      if (!captionTracks_.isModifiable()) {
        captionTracks_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(captionTracks_);
       }
    }

    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void setCaptionTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCaptionTracksIsMutable();
      captionTracks_.set(index, value);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void setCaptionTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.Builder builderForValue) {
      ensureCaptionTracksIsMutable();
      captionTracks_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void addCaptionTracks(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCaptionTracksIsMutable();
      captionTracks_.add(value);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void addCaptionTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureCaptionTracksIsMutable();
      captionTracks_.add(index, value);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void addCaptionTracks(
        com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.Builder builderForValue) {
      ensureCaptionTracksIsMutable();
      captionTracks_.add(builderForValue.build());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void addCaptionTracks(
        int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.Builder builderForValue) {
      ensureCaptionTracksIsMutable();
      captionTracks_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void addAllCaptionTracks(
        java.lang.Iterable<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack> values) {
      ensureCaptionTracksIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, captionTracks_);
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void clearCaptionTracks() {
      captionTracks_ = emptyProtobufList();
    }
    /**
     * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
     */
    private void removeCaptionTracks(int index) {
      ensureCaptionTracksIsMutable();
      captionTracks_.remove(index);
    }

    public static final int HAS_CAPTION_TRACK_FIELD_NUMBER = 21;
    private boolean hasCaptionTrack_;
    /**
     * <code>optional bool has_caption_track = 21;</code>
     */
    public boolean hasHasCaptionTrack() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool has_caption_track = 21;</code>
     */
    public boolean getHasCaptionTrack() {
      return hasCaptionTrack_;
    }
    /**
     * <code>optional bool has_caption_track = 21;</code>
     */
    private void setHasCaptionTrack(boolean value) {
      bitField0_ |= 0x00010000;
      hasCaptionTrack_ = value;
    }
    /**
     * <code>optional bool has_caption_track = 21;</code>
     */
    private void clearHasCaptionTrack() {
      bitField0_ = (bitField0_ & ~0x00010000);
      hasCaptionTrack_ = false;
    }

    public static final int SERVICE_TYPE_FIELD_NUMBER = 22;
    private int serviceType_;
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
     */
    public boolean hasServiceType() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
     */
    public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType getServiceType() {
      com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType result = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType.forNumber(serviceType_);
      return result == null ? com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType.SERVICE_TYPE_ATSC_DIGITAL_TELEVISION : result;
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
     */
    private void setServiceType(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00020000;
      serviceType_ = value.getNumber();
    }
    /**
     * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
     */
    private void clearServiceType() {
      bitField0_ = (bitField0_ & ~0x00020000);
      serviceType_ = 2;
    }

    public static final int RECORDING_PROHIBITED_FIELD_NUMBER = 23;
    private boolean recordingProhibited_;
    /**
     * <code>optional bool recording_prohibited = 23;</code>
     */
    public boolean hasRecordingProhibited() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool recording_prohibited = 23;</code>
     */
    public boolean getRecordingProhibited() {
      return recordingProhibited_;
    }
    /**
     * <code>optional bool recording_prohibited = 23;</code>
     */
    private void setRecordingProhibited(boolean value) {
      bitField0_ |= 0x00040000;
      recordingProhibited_ = value;
    }
    /**
     * <code>optional bool recording_prohibited = 23;</code>
     */
    private void clearRecordingProhibited() {
      bitField0_ = (bitField0_ & ~0x00040000);
      recordingProhibited_ = false;
    }

    public static final int VIDEO_FORMAT_FIELD_NUMBER = 24;
    private java.lang.String videoFormat_;
    /**
     * <code>optional string video_format = 24;</code>
     */
    public boolean hasVideoFormat() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional string video_format = 24;</code>
     */
    public java.lang.String getVideoFormat() {
      return videoFormat_;
    }
    /**
     * <code>optional string video_format = 24;</code>
     */
    public com.google.protobuf.ByteString
        getVideoFormatBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(videoFormat_);
    }
    /**
     * <code>optional string video_format = 24;</code>
     */
    private void setVideoFormat(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
      videoFormat_ = value;
    }
    /**
     * <code>optional string video_format = 24;</code>
     */
    private void clearVideoFormat() {
      bitField0_ = (bitField0_ & ~0x00080000);
      videoFormat_ = getDefaultInstance().getVideoFormat();
    }
    /**
     * <code>optional string video_format = 24;</code>
     */
    private void setVideoFormatBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
      videoFormat_ = value.toStringUtf8();
    }

    public static final int LOCKED_FIELD_NUMBER = 25;
    private boolean locked_;
    /**
     * <pre>
     **
     * The flag indicating whether this TV channel is locked or not.
     * This is primarily used for alternative parental control to prevent unauthorized users from
     * watching the current channel regardless of the content rating
     * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
     * </pre>
     *
     * <code>optional bool locked = 25;</code>
     */
    public boolean hasLocked() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <pre>
     **
     * The flag indicating whether this TV channel is locked or not.
     * This is primarily used for alternative parental control to prevent unauthorized users from
     * watching the current channel regardless of the content rating
     * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
     * </pre>
     *
     * <code>optional bool locked = 25;</code>
     */
    public boolean getLocked() {
      return locked_;
    }
    /**
     * <pre>
     **
     * The flag indicating whether this TV channel is locked or not.
     * This is primarily used for alternative parental control to prevent unauthorized users from
     * watching the current channel regardless of the content rating
     * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
     * </pre>
     *
     * <code>optional bool locked = 25;</code>
     */
    private void setLocked(boolean value) {
      bitField0_ |= 0x00100000;
      locked_ = value;
    }
    /**
     * <pre>
     **
     * The flag indicating whether this TV channel is locked or not.
     * This is primarily used for alternative parental control to prevent unauthorized users from
     * watching the current channel regardless of the content rating
     * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
     * </pre>
     *
     * <code>optional bool locked = 25;</code>
     */
    private void clearLocked() {
      bitField0_ = (bitField0_ & ~0x00100000);
      locked_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getShortName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getLongName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, frequency_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeString(5, getModulation());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(6, getFilepath());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, programNumber_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, virtualMajor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, virtualMinor_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(10, channelId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeString(11, getDescription());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, tsid_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, videoPid_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(14, videoStreamType_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, pcrPid_);
      }
      for (int i = 0; i < audioTracks_.size(); i++) {
        output.writeMessage(16, audioTracks_.get(i));
      }
      for (int i = 0; i < audioPids_.size(); i++) {
        output.writeInt32(17, audioPids_.getInt(i));
      }
      for (int i = 0; i < audioStreamTypes_.size(); i++) {
        output.writeEnum(18, audioStreamTypes_.getInt(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, audioTrackIndex_);
      }
      for (int i = 0; i < captionTracks_.size(); i++) {
        output.writeMessage(20, captionTracks_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(21, hasCaptionTrack_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeEnum(22, serviceType_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(23, recordingProhibited_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeString(24, getVideoFormat());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(25, locked_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getShortName());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getLongName());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, frequency_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getModulation());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getFilepath());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, programNumber_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, virtualMajor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, virtualMinor_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, channelId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(11, getDescription());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, tsid_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, videoPid_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, videoStreamType_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, pcrPid_);
      }
      for (int i = 0; i < audioTracks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, audioTracks_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < audioPids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(audioPids_.getInt(i));
        }
        size += dataSize;
        size += 2 * getAudioPidsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < audioStreamTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(audioStreamTypes_.getInt(i));
        }
        size += dataSize;
        size += 2 * audioStreamTypes_.size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, audioTrackIndex_);
      }
      for (int i = 0; i < captionTracks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, captionTracks_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, hasCaptionTrack_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(22, serviceType_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, recordingProhibited_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(24, getVideoFormat());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, locked_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Holds information about a channel used in the tuners.
     * </pre>
     *
     * Protobuf type {@code com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto)
        com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProtoOrBuilder {
      // Construct using com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
       */
      public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType getType() {
        return instance.getType();
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
       */
      public Builder setType(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerType type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>optional string short_name = 2;</code>
       */
      public boolean hasShortName() {
        return instance.hasShortName();
      }
      /**
       * <code>optional string short_name = 2;</code>
       */
      public java.lang.String getShortName() {
        return instance.getShortName();
      }
      /**
       * <code>optional string short_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getShortNameBytes() {
        return instance.getShortNameBytes();
      }
      /**
       * <code>optional string short_name = 2;</code>
       */
      public Builder setShortName(
          java.lang.String value) {
        copyOnWrite();
        instance.setShortName(value);
        return this;
      }
      /**
       * <code>optional string short_name = 2;</code>
       */
      public Builder clearShortName() {
        copyOnWrite();
        instance.clearShortName();
        return this;
      }
      /**
       * <code>optional string short_name = 2;</code>
       */
      public Builder setShortNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setShortNameBytes(value);
        return this;
      }

      /**
       * <code>optional string long_name = 3;</code>
       */
      public boolean hasLongName() {
        return instance.hasLongName();
      }
      /**
       * <code>optional string long_name = 3;</code>
       */
      public java.lang.String getLongName() {
        return instance.getLongName();
      }
      /**
       * <code>optional string long_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLongNameBytes() {
        return instance.getLongNameBytes();
      }
      /**
       * <code>optional string long_name = 3;</code>
       */
      public Builder setLongName(
          java.lang.String value) {
        copyOnWrite();
        instance.setLongName(value);
        return this;
      }
      /**
       * <code>optional string long_name = 3;</code>
       */
      public Builder clearLongName() {
        copyOnWrite();
        instance.clearLongName();
        return this;
      }
      /**
       * <code>optional string long_name = 3;</code>
       */
      public Builder setLongNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLongNameBytes(value);
        return this;
      }

      /**
       * <code>optional int32 frequency = 4;</code>
       */
      public boolean hasFrequency() {
        return instance.hasFrequency();
      }
      /**
       * <code>optional int32 frequency = 4;</code>
       */
      public int getFrequency() {
        return instance.getFrequency();
      }
      /**
       * <code>optional int32 frequency = 4;</code>
       */
      public Builder setFrequency(int value) {
        copyOnWrite();
        instance.setFrequency(value);
        return this;
      }
      /**
       * <code>optional int32 frequency = 4;</code>
       */
      public Builder clearFrequency() {
        copyOnWrite();
        instance.clearFrequency();
        return this;
      }

      /**
       * <code>optional string modulation = 5;</code>
       */
      public boolean hasModulation() {
        return instance.hasModulation();
      }
      /**
       * <code>optional string modulation = 5;</code>
       */
      public java.lang.String getModulation() {
        return instance.getModulation();
      }
      /**
       * <code>optional string modulation = 5;</code>
       */
      public com.google.protobuf.ByteString
          getModulationBytes() {
        return instance.getModulationBytes();
      }
      /**
       * <code>optional string modulation = 5;</code>
       */
      public Builder setModulation(
          java.lang.String value) {
        copyOnWrite();
        instance.setModulation(value);
        return this;
      }
      /**
       * <code>optional string modulation = 5;</code>
       */
      public Builder clearModulation() {
        copyOnWrite();
        instance.clearModulation();
        return this;
      }
      /**
       * <code>optional string modulation = 5;</code>
       */
      public Builder setModulationBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setModulationBytes(value);
        return this;
      }

      /**
       * <code>optional string filepath = 6;</code>
       */
      public boolean hasFilepath() {
        return instance.hasFilepath();
      }
      /**
       * <code>optional string filepath = 6;</code>
       */
      public java.lang.String getFilepath() {
        return instance.getFilepath();
      }
      /**
       * <code>optional string filepath = 6;</code>
       */
      public com.google.protobuf.ByteString
          getFilepathBytes() {
        return instance.getFilepathBytes();
      }
      /**
       * <code>optional string filepath = 6;</code>
       */
      public Builder setFilepath(
          java.lang.String value) {
        copyOnWrite();
        instance.setFilepath(value);
        return this;
      }
      /**
       * <code>optional string filepath = 6;</code>
       */
      public Builder clearFilepath() {
        copyOnWrite();
        instance.clearFilepath();
        return this;
      }
      /**
       * <code>optional string filepath = 6;</code>
       */
      public Builder setFilepathBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFilepathBytes(value);
        return this;
      }

      /**
       * <code>optional int32 program_number = 7;</code>
       */
      public boolean hasProgramNumber() {
        return instance.hasProgramNumber();
      }
      /**
       * <code>optional int32 program_number = 7;</code>
       */
      public int getProgramNumber() {
        return instance.getProgramNumber();
      }
      /**
       * <code>optional int32 program_number = 7;</code>
       */
      public Builder setProgramNumber(int value) {
        copyOnWrite();
        instance.setProgramNumber(value);
        return this;
      }
      /**
       * <code>optional int32 program_number = 7;</code>
       */
      public Builder clearProgramNumber() {
        copyOnWrite();
        instance.clearProgramNumber();
        return this;
      }

      /**
       * <code>optional int32 virtual_major = 8;</code>
       */
      public boolean hasVirtualMajor() {
        return instance.hasVirtualMajor();
      }
      /**
       * <code>optional int32 virtual_major = 8;</code>
       */
      public int getVirtualMajor() {
        return instance.getVirtualMajor();
      }
      /**
       * <code>optional int32 virtual_major = 8;</code>
       */
      public Builder setVirtualMajor(int value) {
        copyOnWrite();
        instance.setVirtualMajor(value);
        return this;
      }
      /**
       * <code>optional int32 virtual_major = 8;</code>
       */
      public Builder clearVirtualMajor() {
        copyOnWrite();
        instance.clearVirtualMajor();
        return this;
      }

      /**
       * <code>optional int32 virtual_minor = 9;</code>
       */
      public boolean hasVirtualMinor() {
        return instance.hasVirtualMinor();
      }
      /**
       * <code>optional int32 virtual_minor = 9;</code>
       */
      public int getVirtualMinor() {
        return instance.getVirtualMinor();
      }
      /**
       * <code>optional int32 virtual_minor = 9;</code>
       */
      public Builder setVirtualMinor(int value) {
        copyOnWrite();
        instance.setVirtualMinor(value);
        return this;
      }
      /**
       * <code>optional int32 virtual_minor = 9;</code>
       */
      public Builder clearVirtualMinor() {
        copyOnWrite();
        instance.clearVirtualMinor();
        return this;
      }

      /**
       * <code>optional int64 channel_id = 10;</code>
       */
      public boolean hasChannelId() {
        return instance.hasChannelId();
      }
      /**
       * <code>optional int64 channel_id = 10;</code>
       */
      public long getChannelId() {
        return instance.getChannelId();
      }
      /**
       * <code>optional int64 channel_id = 10;</code>
       */
      public Builder setChannelId(long value) {
        copyOnWrite();
        instance.setChannelId(value);
        return this;
      }
      /**
       * <code>optional int64 channel_id = 10;</code>
       */
      public Builder clearChannelId() {
        copyOnWrite();
        instance.clearChannelId();
        return this;
      }

      /**
       * <code>optional string description = 11;</code>
       */
      public boolean hasDescription() {
        return instance.hasDescription();
      }
      /**
       * <code>optional string description = 11;</code>
       */
      public java.lang.String getDescription() {
        return instance.getDescription();
      }
      /**
       * <code>optional string description = 11;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        return instance.getDescriptionBytes();
      }
      /**
       * <code>optional string description = 11;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setDescription(value);
        return this;
      }
      /**
       * <code>optional string description = 11;</code>
       */
      public Builder clearDescription() {
        copyOnWrite();
        instance.clearDescription();
        return this;
      }
      /**
       * <code>optional string description = 11;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDescriptionBytes(value);
        return this;
      }

      /**
       * <code>optional int32 tsid = 12;</code>
       */
      public boolean hasTsid() {
        return instance.hasTsid();
      }
      /**
       * <code>optional int32 tsid = 12;</code>
       */
      public int getTsid() {
        return instance.getTsid();
      }
      /**
       * <code>optional int32 tsid = 12;</code>
       */
      public Builder setTsid(int value) {
        copyOnWrite();
        instance.setTsid(value);
        return this;
      }
      /**
       * <code>optional int32 tsid = 12;</code>
       */
      public Builder clearTsid() {
        copyOnWrite();
        instance.clearTsid();
        return this;
      }

      /**
       * <code>optional int32 video_pid = 13;</code>
       */
      public boolean hasVideoPid() {
        return instance.hasVideoPid();
      }
      /**
       * <code>optional int32 video_pid = 13;</code>
       */
      public int getVideoPid() {
        return instance.getVideoPid();
      }
      /**
       * <code>optional int32 video_pid = 13;</code>
       */
      public Builder setVideoPid(int value) {
        copyOnWrite();
        instance.setVideoPid(value);
        return this;
      }
      /**
       * <code>optional int32 video_pid = 13;</code>
       */
      public Builder clearVideoPid() {
        copyOnWrite();
        instance.clearVideoPid();
        return this;
      }

      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
       */
      public boolean hasVideoStreamType() {
        return instance.hasVideoStreamType();
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
       */
      public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType getVideoStreamType() {
        return instance.getVideoStreamType();
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
       */
      public Builder setVideoStreamType(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType value) {
        copyOnWrite();
        instance.setVideoStreamType(value);
        return this;
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.VideoStreamType video_stream_type = 14;</code>
       */
      public Builder clearVideoStreamType() {
        copyOnWrite();
        instance.clearVideoStreamType();
        return this;
      }

      /**
       * <code>optional int32 pcr_pid = 15;</code>
       */
      public boolean hasPcrPid() {
        return instance.hasPcrPid();
      }
      /**
       * <code>optional int32 pcr_pid = 15;</code>
       */
      public int getPcrPid() {
        return instance.getPcrPid();
      }
      /**
       * <code>optional int32 pcr_pid = 15;</code>
       */
      public Builder setPcrPid(int value) {
        copyOnWrite();
        instance.setPcrPid(value);
        return this;
      }
      /**
       * <code>optional int32 pcr_pid = 15;</code>
       */
      public Builder clearPcrPid() {
        copyOnWrite();
        instance.clearPcrPid();
        return this;
      }

      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack> getAudioTracksList() {
        return java.util.Collections.unmodifiableList(
            instance.getAudioTracksList());
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public int getAudioTracksCount() {
        return instance.getAudioTracksCount();
      }/**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack getAudioTracks(int index) {
        return instance.getAudioTracks(index);
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder setAudioTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack value) {
        copyOnWrite();
        instance.setAudioTracks(index, value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder setAudioTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.Builder builderForValue) {
        copyOnWrite();
        instance.setAudioTracks(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder addAudioTracks(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack value) {
        copyOnWrite();
        instance.addAudioTracks(value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder addAudioTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack value) {
        copyOnWrite();
        instance.addAudioTracks(index, value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder addAudioTracks(
          com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.Builder builderForValue) {
        copyOnWrite();
        instance.addAudioTracks(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder addAudioTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.Builder builderForValue) {
        copyOnWrite();
        instance.addAudioTracks(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder addAllAudioTracks(
          java.lang.Iterable<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack> values) {
        copyOnWrite();
        instance.addAllAudioTracks(values);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder clearAudioTracks() {
        copyOnWrite();
        instance.clearAudioTracks();
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscAudioTrack audio_tracks = 16;</code>
       */
      public Builder removeAudioTracks(int index) {
        copyOnWrite();
        instance.removeAudioTracks(index);
        return this;
      }

      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public java.util.List<java.lang.Integer>
          getAudioPidsList() {
        return java.util.Collections.unmodifiableList(
            instance.getAudioPidsList());
      }
      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public int getAudioPidsCount() {
        return instance.getAudioPidsCount();
      }
      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public int getAudioPids(int index) {
        return instance.getAudioPids(index);
      }
      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public Builder setAudioPids(
          int index, int value) {
        copyOnWrite();
        instance.setAudioPids(index, value);
        return this;
      }
      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public Builder addAudioPids(int value) {
        copyOnWrite();
        instance.addAudioPids(value);
        return this;
      }
      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public Builder addAllAudioPids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllAudioPids(values);
        return this;
      }
      /**
       * <code>repeated int32 audio_pids = 17;</code>
       */
      public Builder clearAudioPids() {
        copyOnWrite();
        instance.clearAudioPids();
        return this;
      }

      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType> getAudioStreamTypesList() {
        return instance.getAudioStreamTypesList();
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public int getAudioStreamTypesCount() {
        return instance.getAudioStreamTypesCount();
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType getAudioStreamTypes(int index) {
        return instance.getAudioStreamTypes(index);
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public Builder setAudioStreamTypes(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value) {
        copyOnWrite();
        instance.setAudioStreamTypes(index, value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public Builder addAudioStreamTypes(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value) {
        copyOnWrite();
        instance.addAudioStreamTypes(value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public Builder addAllAudioStreamTypes(
          java.lang.Iterable<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType> values) {
        copyOnWrite();
        instance.addAllAudioStreamTypes(values);  return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AudioStreamType audio_stream_types = 18;</code>
       */
      public Builder clearAudioStreamTypes() {
        copyOnWrite();
        instance.clearAudioStreamTypes();
        return this;
      }

      /**
       * <code>optional int32 audio_track_index = 19;</code>
       */
      public boolean hasAudioTrackIndex() {
        return instance.hasAudioTrackIndex();
      }
      /**
       * <code>optional int32 audio_track_index = 19;</code>
       */
      public int getAudioTrackIndex() {
        return instance.getAudioTrackIndex();
      }
      /**
       * <code>optional int32 audio_track_index = 19;</code>
       */
      public Builder setAudioTrackIndex(int value) {
        copyOnWrite();
        instance.setAudioTrackIndex(value);
        return this;
      }
      /**
       * <code>optional int32 audio_track_index = 19;</code>
       */
      public Builder clearAudioTrackIndex() {
        copyOnWrite();
        instance.clearAudioTrackIndex();
        return this;
      }

      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public java.util.List<com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack> getCaptionTracksList() {
        return java.util.Collections.unmodifiableList(
            instance.getCaptionTracksList());
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public int getCaptionTracksCount() {
        return instance.getCaptionTracksCount();
      }/**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack getCaptionTracks(int index) {
        return instance.getCaptionTracks(index);
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder setCaptionTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack value) {
        copyOnWrite();
        instance.setCaptionTracks(index, value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder setCaptionTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.Builder builderForValue) {
        copyOnWrite();
        instance.setCaptionTracks(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder addCaptionTracks(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack value) {
        copyOnWrite();
        instance.addCaptionTracks(value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder addCaptionTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack value) {
        copyOnWrite();
        instance.addCaptionTracks(index, value);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder addCaptionTracks(
          com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.Builder builderForValue) {
        copyOnWrite();
        instance.addCaptionTracks(builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder addCaptionTracks(
          int index, com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.Builder builderForValue) {
        copyOnWrite();
        instance.addCaptionTracks(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder addAllCaptionTracks(
          java.lang.Iterable<? extends com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack> values) {
        copyOnWrite();
        instance.addAllCaptionTracks(values);
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder clearCaptionTracks() {
        copyOnWrite();
        instance.clearCaptionTracks();
        return this;
      }
      /**
       * <code>repeated .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscCaptionTrack caption_tracks = 20;</code>
       */
      public Builder removeCaptionTracks(int index) {
        copyOnWrite();
        instance.removeCaptionTracks(index);
        return this;
      }

      /**
       * <code>optional bool has_caption_track = 21;</code>
       */
      public boolean hasHasCaptionTrack() {
        return instance.hasHasCaptionTrack();
      }
      /**
       * <code>optional bool has_caption_track = 21;</code>
       */
      public boolean getHasCaptionTrack() {
        return instance.getHasCaptionTrack();
      }
      /**
       * <code>optional bool has_caption_track = 21;</code>
       */
      public Builder setHasCaptionTrack(boolean value) {
        copyOnWrite();
        instance.setHasCaptionTrack(value);
        return this;
      }
      /**
       * <code>optional bool has_caption_track = 21;</code>
       */
      public Builder clearHasCaptionTrack() {
        copyOnWrite();
        instance.clearHasCaptionTrack();
        return this;
      }

      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
       */
      public boolean hasServiceType() {
        return instance.hasServiceType();
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
       */
      public com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType getServiceType() {
        return instance.getServiceType();
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
       */
      public Builder setServiceType(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType value) {
        copyOnWrite();
        instance.setServiceType(value);
        return this;
      }
      /**
       * <code>optional .com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.AtscServiceType service_type = 22 [default = SERVICE_TYPE_ATSC_DIGITAL_TELEVISION];</code>
       */
      public Builder clearServiceType() {
        copyOnWrite();
        instance.clearServiceType();
        return this;
      }

      /**
       * <code>optional bool recording_prohibited = 23;</code>
       */
      public boolean hasRecordingProhibited() {
        return instance.hasRecordingProhibited();
      }
      /**
       * <code>optional bool recording_prohibited = 23;</code>
       */
      public boolean getRecordingProhibited() {
        return instance.getRecordingProhibited();
      }
      /**
       * <code>optional bool recording_prohibited = 23;</code>
       */
      public Builder setRecordingProhibited(boolean value) {
        copyOnWrite();
        instance.setRecordingProhibited(value);
        return this;
      }
      /**
       * <code>optional bool recording_prohibited = 23;</code>
       */
      public Builder clearRecordingProhibited() {
        copyOnWrite();
        instance.clearRecordingProhibited();
        return this;
      }

      /**
       * <code>optional string video_format = 24;</code>
       */
      public boolean hasVideoFormat() {
        return instance.hasVideoFormat();
      }
      /**
       * <code>optional string video_format = 24;</code>
       */
      public java.lang.String getVideoFormat() {
        return instance.getVideoFormat();
      }
      /**
       * <code>optional string video_format = 24;</code>
       */
      public com.google.protobuf.ByteString
          getVideoFormatBytes() {
        return instance.getVideoFormatBytes();
      }
      /**
       * <code>optional string video_format = 24;</code>
       */
      public Builder setVideoFormat(
          java.lang.String value) {
        copyOnWrite();
        instance.setVideoFormat(value);
        return this;
      }
      /**
       * <code>optional string video_format = 24;</code>
       */
      public Builder clearVideoFormat() {
        copyOnWrite();
        instance.clearVideoFormat();
        return this;
      }
      /**
       * <code>optional string video_format = 24;</code>
       */
      public Builder setVideoFormatBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVideoFormatBytes(value);
        return this;
      }

      /**
       * <pre>
       **
       * The flag indicating whether this TV channel is locked or not.
       * This is primarily used for alternative parental control to prevent unauthorized users from
       * watching the current channel regardless of the content rating
       * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
       * </pre>
       *
       * <code>optional bool locked = 25;</code>
       */
      public boolean hasLocked() {
        return instance.hasLocked();
      }
      /**
       * <pre>
       **
       * The flag indicating whether this TV channel is locked or not.
       * This is primarily used for alternative parental control to prevent unauthorized users from
       * watching the current channel regardless of the content rating
       * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
       * </pre>
       *
       * <code>optional bool locked = 25;</code>
       */
      public boolean getLocked() {
        return instance.getLocked();
      }
      /**
       * <pre>
       **
       * The flag indicating whether this TV channel is locked or not.
       * This is primarily used for alternative parental control to prevent unauthorized users from
       * watching the current channel regardless of the content rating
       * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
       * </pre>
       *
       * <code>optional bool locked = 25;</code>
       */
      public Builder setLocked(boolean value) {
        copyOnWrite();
        instance.setLocked(value);
        return this;
      }
      /**
       * <pre>
       **
       * The flag indicating whether this TV channel is locked or not.
       * This is primarily used for alternative parental control to prevent unauthorized users from
       * watching the current channel regardless of the content rating
       * &#64;see &lt;a href="https://developer.android.com/reference/android/media/tv/TvContract.Channels.html#COLUMN_LOCKED"&gt;link&lt;/a&gt;
       * </pre>
       *
       * <code>optional bool locked = 25;</code>
       */
      public Builder clearLocked() {
        copyOnWrite();
        instance.clearLocked();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          audioTracks_.makeImmutable();
          audioPids_.makeImmutable();
          audioStreamTypes_.makeImmutable();
          captionTracks_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto other = (com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          shortName_ = visitor.visitString(
              hasShortName(), shortName_,
              other.hasShortName(), other.shortName_);
          longName_ = visitor.visitString(
              hasLongName(), longName_,
              other.hasLongName(), other.longName_);
          frequency_ = visitor.visitInt(
              hasFrequency(), frequency_,
              other.hasFrequency(), other.frequency_);
          modulation_ = visitor.visitString(
              hasModulation(), modulation_,
              other.hasModulation(), other.modulation_);
          filepath_ = visitor.visitString(
              hasFilepath(), filepath_,
              other.hasFilepath(), other.filepath_);
          programNumber_ = visitor.visitInt(
              hasProgramNumber(), programNumber_,
              other.hasProgramNumber(), other.programNumber_);
          virtualMajor_ = visitor.visitInt(
              hasVirtualMajor(), virtualMajor_,
              other.hasVirtualMajor(), other.virtualMajor_);
          virtualMinor_ = visitor.visitInt(
              hasVirtualMinor(), virtualMinor_,
              other.hasVirtualMinor(), other.virtualMinor_);
          channelId_ = visitor.visitLong(
              hasChannelId(), channelId_,
              other.hasChannelId(), other.channelId_);
          description_ = visitor.visitString(
              hasDescription(), description_,
              other.hasDescription(), other.description_);
          tsid_ = visitor.visitInt(
              hasTsid(), tsid_,
              other.hasTsid(), other.tsid_);
          videoPid_ = visitor.visitInt(
              hasVideoPid(), videoPid_,
              other.hasVideoPid(), other.videoPid_);
          videoStreamType_ = visitor.visitInt(hasVideoStreamType(), videoStreamType_,
              other.hasVideoStreamType(), other.videoStreamType_);
          pcrPid_ = visitor.visitInt(
              hasPcrPid(), pcrPid_,
              other.hasPcrPid(), other.pcrPid_);
          audioTracks_= visitor.visitList(audioTracks_, other.audioTracks_);
          audioPids_= visitor.visitIntList(audioPids_, other.audioPids_);
          audioStreamTypes_= visitor.visitIntList(audioStreamTypes_, other.audioStreamTypes_);
          audioTrackIndex_ = visitor.visitInt(
              hasAudioTrackIndex(), audioTrackIndex_,
              other.hasAudioTrackIndex(), other.audioTrackIndex_);
          captionTracks_= visitor.visitList(captionTracks_, other.captionTracks_);
          hasCaptionTrack_ = visitor.visitBoolean(
              hasHasCaptionTrack(), hasCaptionTrack_,
              other.hasHasCaptionTrack(), other.hasCaptionTrack_);
          serviceType_ = visitor.visitInt(hasServiceType(), serviceType_,
              other.hasServiceType(), other.serviceType_);
          recordingProhibited_ = visitor.visitBoolean(
              hasRecordingProhibited(), recordingProhibited_,
              other.hasRecordingProhibited(), other.recordingProhibited_);
          videoFormat_ = visitor.visitString(
              hasVideoFormat(), videoFormat_,
              other.hasVideoFormat(), other.videoFormat_);
          locked_ = visitor.visitBoolean(
              hasLocked(), locked_,
              other.hasLocked(), other.locked_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType value = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  shortName_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  longName_ = s;
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  frequency_ = input.readInt32();
                  break;
                }
                case 42: {
                  String s = input.readString();
                  bitField0_ |= 0x00000010;
                  modulation_ = s;
                  break;
                }
                case 50: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  filepath_ = s;
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  programNumber_ = input.readInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  virtualMajor_ = input.readInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  virtualMinor_ = input.readInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  channelId_ = input.readInt64();
                  break;
                }
                case 90: {
                  String s = input.readString();
                  bitField0_ |= 0x00000400;
                  description_ = s;
                  break;
                }
                case 96: {
                  bitField0_ |= 0x00000800;
                  tsid_ = input.readInt32();
                  break;
                }
                case 104: {
                  bitField0_ |= 0x00001000;
                  videoPid_ = input.readInt32();
                  break;
                }
                case 112: {
                  int rawValue = input.readEnum();
                  com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType value = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.VideoStreamType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(14, rawValue);
                  } else {
                    bitField0_ |= 0x00002000;
                    videoStreamType_ = rawValue;
                  }
                  break;
                }
                case 120: {
                  bitField0_ |= 0x00004000;
                  pcrPid_ = input.readInt32();
                  break;
                }
                case 130: {
                  if (!audioTracks_.isModifiable()) {
                    audioTracks_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(audioTracks_);
                  }
                  audioTracks_.add(
                      input.readMessage(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscAudioTrack.parser(), extensionRegistry));
                  break;
                }
                case 136: {
                  if (!audioPids_.isModifiable()) {
                    audioPids_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(audioPids_);
                  }
                  audioPids_.addInt(input.readInt32());
                  break;
                }
                case 138: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!audioPids_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    audioPids_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(audioPids_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    audioPids_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 144: {
                  if (!audioStreamTypes_.isModifiable()) {
                    audioStreamTypes_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(audioStreamTypes_);
                  }
                  int rawValue = input.readEnum();
                  com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(18, rawValue);
                  } else {
                    audioStreamTypes_.addInt(rawValue);
                  }
                  break;
                }
                case 146: {
                  if (!audioStreamTypes_.isModifiable()) {
                    audioStreamTypes_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(audioStreamTypes_);
                  }
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int rawValue = input.readEnum();
                    com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType value = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AudioStreamType.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(18, rawValue);
                    } else {
                      audioStreamTypes_.addInt(rawValue);
                    }
                  }
                  input.popLimit(oldLimit);
                  break;
                }
                case 152: {
                  bitField0_ |= 0x00008000;
                  audioTrackIndex_ = input.readInt32();
                  break;
                }
                case 162: {
                  if (!captionTracks_.isModifiable()) {
                    captionTracks_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(captionTracks_);
                  }
                  captionTracks_.add(
                      input.readMessage(com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Track.AtscCaptionTrack.parser(), extensionRegistry));
                  break;
                }
                case 168: {
                  bitField0_ |= 0x00010000;
                  hasCaptionTrack_ = input.readBool();
                  break;
                }
                case 176: {
                  int rawValue = input.readEnum();
                  com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType value = com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.AtscServiceType.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(22, rawValue);
                  } else {
                    bitField0_ |= 0x00020000;
                    serviceType_ = rawValue;
                  }
                  break;
                }
                case 184: {
                  bitField0_ |= 0x00040000;
                  recordingProhibited_ = input.readBool();
                  break;
                }
                case 194: {
                  String s = input.readString();
                  bitField0_ |= 0x00080000;
                  videoFormat_ = s;
                  break;
                }
                case 200: {
                  bitField0_ |= 0x00100000;
                  locked_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.TunerChannelProto)
    private static final com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new TunerChannelProto();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.example.android.sampletvinput.tuner.src.com.android.tv.tuner.Channel.TunerChannelProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TunerChannelProto> PARSER;

    public static com.google.protobuf.Parser<TunerChannelProto> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
